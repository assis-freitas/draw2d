{
  "name": "policy",
  "namespace": "draw2d",
  "description": "<p>This package contains EditPolicy implementations for all used elements. A <em>EditPolicy</em>\nis a pluggable contribution implementing a portion of an element behavior. Editpolicies contribute to the\noverall editing behavior of an EditPart.</p>\n<p>Editing behavior is defined as one or more of the following:</p>\n<ul>\n<li>Selection handling</li>\n<li>Routing</li>\n<li>Feedback management</li>\n<li>Delegation and Forwarding of commands</li>\n<li>Drag&amp;Drop behaviour</li>\n</ul>",
  "access": "",
  "virtual": false,
  "namespaces": [
    {
      "name": "canvas",
      "namespace": "draw2d.policy"
    },
    {
      "name": "connection",
      "namespace": "draw2d.policy"
    },
    {
      "name": "line",
      "namespace": "draw2d.policy"
    },
    {
      "name": "port",
      "namespace": "draw2d.policy"
    },
    {
      "name": "figure",
      "namespace": "draw2d.policy"
    }
  ],
  "classes": [
    {
      "name": "EditPolicy",
      "namespace": "draw2d.policy",
      "description": "<p>A plugable contribution implementing a portion of an behavior.</p>\n<p>EditPolicies should determine an Canvas or figure editing capabilities. It is possible to implement\nan figure such that it handles all editing responsibility. However, it is much more flexible\nand object-oriented to use EditPolicies. Using policies, you can pick and choose the editing\nbehavior for an figure/canvas without being bound to its class hierarchy. Code management is easier.</p>\n<p>This interface is not intended to be implemented by clients. Clients should inherit from {@link draw2d.policy.figure.SelectionFeedbackPolicy}\nor {@link draw2d.policy.canvas.SelectionPolicy}.</p>",
      "extends": [],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been installed.</p>",
          "parameters": [
            {
              "name": "host",
              "type": [
                "draw2d.Canvas",
                "draw2d.Figure"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been uninstalled.</p>",
          "parameters": [
            {
              "name": "host",
              "type": [
                "draw2d.Canvas",
                "draw2d.Figure"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        }
      ],
      "fires": "",
      "constructor": {
        "name": "EditPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    }
  ]
}