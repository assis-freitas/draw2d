{
  "name": "RegionEditPolicy",
  "namespace": "draw2d.policy.figure",
  "description": "<p>An EditPolicy for use with Figures. The constraint for RegionEditPolicy is a Rectangle. It is\nnot possible to move the related figure outside this constrained area.</p>",
  "extends": [
    "draw2d.policy.figure.DragDropEditPolicy"
  ],
  "access": "",
  "virtual": false,
  "functions": [
    {
      "name": "init",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>Creates a new constraint object</p>",
      "parameters": [
        {
          "name": "x",
          "type": [
            "Number",
            "draw2d.geo.Rectangle"
          ],
          "description": "<p>x coordinate or a rectangle as constraint for the assigned figure.</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "y",
          "type": "Number",
          "description": "",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "w",
          "type": "Number",
          "description": "",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "h",
          "type": "Number",
          "description": "",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "inherited": false,
      "since": "",
      "examples": []
    },
    {
      "name": "setBoundingBox",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>Update the constraint bounding box for the policy.</p>",
      "parameters": [
        {
          "name": "boundingBox",
          "type": "draw2d.geo.Rectangle",
          "description": "<p>the constraint rectangle</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "inherited": false,
      "since": "4.8.2",
      "examples": [],
      "returns": {
        "type": "this",
        "description": ""
      }
    },
    {
      "name": "getBoundingBox",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>Returns the constraint bounding box for the policy.</p>",
      "parameters": [],
      "inherited": false,
      "since": "",
      "examples": [],
      "returns": {
        "type": "draw2d.geo.Rectangle",
        "description": ""
      }
    },
    {
      "name": "adjustPosition",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>Adjust the coordinates to the rectangle/region of this constraint.</p>",
      "parameters": [
        {
          "name": "figure",
          "type": "draw2d.Figure",
          "description": "",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "x",
          "type": [
            "Number",
            "draw2d.geo.Point"
          ],
          "description": "",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "y",
          "type": "Number",
          "description": "",
          "default": "",
          "optional": true,
          "nullable": ""
        }
      ],
      "inherited": false,
      "since": "",
      "examples": [],
      "returns": {
        "type": "draw2d.geo.Point",
        "description": "<p>the constraint position of the figure</p>"
      }
    },
    {
      "name": "adjustDimension",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>Adjust the dimension of the rectangle to fit into the region of the policy</p>",
      "parameters": [
        {
          "name": "figure",
          "type": "draw2d.Figure",
          "description": "",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "w",
          "type": "Number",
          "description": "",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "h",
          "type": "Number",
          "description": "",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "inherited": false,
      "since": "",
      "examples": [],
      "returns": {
        "type": "draw2d.geo.Rectangle",
        "description": "<p>the constraint position of the figure</p>"
      }
    },
    {
      "name": "onInstall",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>Called by the host if the policy has been installed.</p>",
      "parameters": [
        {
          "name": "host",
          "type": [
            "draw2d.Canvas",
            "draw2d.Figure"
          ],
          "description": "",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "inherited": true,
      "since": "",
      "examples": []
    },
    {
      "name": "onUninstall",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>Called by the host if the policy has been uninstalled.</p>",
      "parameters": [
        {
          "name": "host",
          "type": [
            "draw2d.Canvas",
            "draw2d.Figure"
          ],
          "description": "",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "inherited": true,
      "since": "",
      "examples": []
    },
    {
      "name": "onDragStart",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>Called by the framework if the related shape has init a drag&amp;drop\noperation</p>\n<p>The Policy can send a veto to prevent the DragDrop operation</p>",
      "parameters": [
        {
          "name": "canvas",
          "type": "draw2d.Canvas",
          "description": "<p>The host canvas</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "figure",
          "type": "draw2d.Figure",
          "description": "<p>The related figure</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "x",
          "type": "Number",
          "description": "<p>the x-coordinate of the mouse up event</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "y",
          "type": "Number",
          "description": "<p>the y-coordinate of the mouse up event</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "shiftKey",
          "type": "Boolean",
          "description": "<p>true if the shift key has been pressed during this event</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "ctrlKey",
          "type": "Boolean",
          "description": "<p>true if the ctrl key has been pressed during the event</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "inherited": true,
      "since": "",
      "examples": [],
      "returns": {
        "type": "Boolean",
        "description": "<p>return <b>false</b> to send a veto to the drag operation</p>"
      }
    },
    {
      "name": "onDrag",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>Called by the framework during drag a figure.</p>",
      "parameters": [
        {
          "name": "canvas",
          "type": "draw2d.Canvas",
          "description": "<p>The host canvas</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "figure",
          "type": "draw2d.Figure",
          "description": "<p>The related figure</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "inherited": true,
      "since": "",
      "examples": []
    },
    {
      "name": "onDragEnd",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>Called by the framework if the drag drop operation ends.</p>",
      "parameters": [
        {
          "name": "canvas",
          "type": "draw2d.Canvas",
          "description": "<p>The host canvas</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "figure",
          "type": "draw2d.Figure",
          "description": "<p>The related figure</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "x",
          "type": "Number",
          "description": "<p>the x-coordinate of the mouse up event</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "y",
          "type": "Number",
          "description": "<p>the y-coordinate of the mouse up event</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "shiftKey",
          "type": "Boolean",
          "description": "<p>true if the shift key has been pressed during this event</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "ctrlKey",
          "type": "Boolean",
          "description": "<p>true if the ctrl key has been pressed during the event</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "inherited": true,
      "since": "",
      "examples": []
    },
    {
      "name": "moved",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>Callback if the figure has moved</p>",
      "parameters": [
        {
          "name": "canvas",
          "type": "draw2d.Canvas",
          "description": "<p>The host canvas</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "figure",
          "type": "draw2d.Figure",
          "description": "<p>The related figure</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "inherited": true,
      "since": "",
      "examples": []
    },
    {
      "name": "onRightMouseDown",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>Called if the user press the right mouse on the figure.<br>\nYou can either override the &quot;onContextMenu&quot; method of the figure or install an editor policy and override this method.\nBooth is valid and possible.</p>",
      "parameters": [
        {
          "name": "figure",
          "type": [
            "draw2d.Figure",
            "draw2d.shape.basic.Line"
          ],
          "description": "<p>the figure below the mouse</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "x",
          "type": "Number",
          "description": "<p>the x-coordinate of the mouse down event</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "y",
          "type": "Number",
          "description": "<p>the y-coordinate of the mouse down event</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "shiftKey",
          "type": "Boolean",
          "description": "<p>true if the shift key has been pressed during this event</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "ctrlKey",
          "type": "Boolean",
          "description": "<p>true if the ctrl key has been pressed during the event</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "inherited": true,
      "since": "4.4.0",
      "examples": []
    },
    {
      "name": "attr",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
      "parameters": [
        {
          "name": "name",
          "type": "String/Object",
          "description": "",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "value",
          "type": "Object",
          "description": "",
          "default": "",
          "optional": true,
          "nullable": ""
        }
      ],
      "inherited": true,
      "since": "5.3.2",
      "examples": [],
      "returns": {
        "type": "Object",
        "description": ""
      }
    }
  ],
  "fires": "",
  "constructor": {
    "name": "RegionEditPolicy",
    "description": "",
    "parameters": [],
    "examples": []
  }
}