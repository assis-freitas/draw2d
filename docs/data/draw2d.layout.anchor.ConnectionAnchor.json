{
  "name": "ConnectionAnchor",
  "namespace": "draw2d.layout.anchor",
  "description": "<p>An object to which a {@link draw2d.Connection} will be anchored.</p>",
  "extends": [],
  "access": "",
  "virtual": false,
  "functions": [
    {
      "name": "init",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "",
      "parameters": [
        {
          "name": "owner",
          "type": "draw2d.Figure",
          "description": "<p>the figure to use for the anchor calculation</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "inherited": false,
      "since": "",
      "examples": []
    },
    {
      "name": "getLocation",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>Returns the location where the Connection should be anchored in absolute coordinates.\nThe anchor may use the given reference Point to calculate this location.</p>",
      "parameters": [
        {
          "name": "reference",
          "type": "draw2d.geo.Point",
          "description": "<p>the opposite reference point</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "inquiringConnection",
          "type": "draw2d.Connection",
          "description": "<p>the connection who ask for the location.</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "inherited": false,
      "since": "",
      "examples": [],
      "returns": {
        "type": "draw2d.geo.Point",
        "description": ""
      }
    },
    {
      "name": "getOwner",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>Returns the Figure that contains this ConnectionAnchor.</p>",
      "parameters": [],
      "inherited": false,
      "since": "",
      "examples": [],
      "returns": {
        "type": "draw2d.Figure",
        "description": "<p>The Figure that contains this ConnectionAnchor</p>"
      }
    },
    {
      "name": "setOwner",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>Set the owner of the Anchor.</p>",
      "parameters": [
        {
          "name": "owner",
          "type": "draw2d.Figure",
          "description": "<p>the new owner of the anchor locator</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "inherited": false,
      "since": "",
      "examples": []
    },
    {
      "name": "getBox",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>Returns the bounds of this Anchor's owner.  Subclasses can override this method\nto adjust the box. Maybe you return the box of the port parent (the parent figure)</p>",
      "parameters": [],
      "inherited": false,
      "since": "",
      "examples": [],
      "returns": {
        "type": "draw2d.geo.Rectangle",
        "description": "<p>The bounds of this Anchor's owner</p>"
      }
    },
    {
      "name": "getReferencePoint",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>Returns the reference point for this anchor in absolute coordinates. This might be used\nby another anchor to determine its own location.</p>",
      "parameters": [
        {
          "name": "inquiringConnection",
          "type": "draw2d.Connection",
          "description": "<p>the connection who ask for the location.</p>",
          "default": "",
          "optional": true,
          "nullable": ""
        }
      ],
      "inherited": false,
      "since": "",
      "examples": [],
      "returns": {
        "type": "draw2d.geo.Point",
        "description": "<p>The reference Point</p>"
      }
    }
  ],
  "fires": "",
  "constructor": {
    "name": "ConnectionAnchor",
    "description": "",
    "parameters": [],
    "examples": []
  }
}