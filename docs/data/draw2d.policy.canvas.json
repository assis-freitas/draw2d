{
  "name": "canvas",
  "namespace": "draw2d.policy",
  "description": "<p>Editpolicies for selection handling, highlighting, background rendering, snapTo behaviour.</p>",
  "access": "",
  "virtual": false,
  "classes": [
    {
      "name": "BoundingboxSelectionPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "",
      "extends": [
        "draw2d.policy.canvas.SelectionPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new selection policy for a canvas.</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "select",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "setDecisionMode",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Set the selection handling mode to <b>intersection</b> or to <b>isInside</b>.</p>\n<ul>\n  <li>true = intersection, shapes must only touch the selection bounding box </li>\n  <li>false = isInside, shapes must complete inside the selection bounding box (default)</li>\n</ul>",
          "parameters": [
            {
              "name": "useIntersectionMode",
              "type": "Boolean",
              "description": "<p>set true if the selection handle should use the alternative selection approach</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "4.9.0",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "select",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Selects the given figure within the canvas. The policy must unselect already selected\nfigures or show any decorations.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "unselect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Unselect the given figure in the canvas and remove all resize handles</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is installed into the canvas.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is deinstalled from the canvas</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "BoundingboxSelectionPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "CanvasPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "",
      "extends": [
        "draw2d.policy.EditPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new Router object</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is installed into the canvas.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is deinstalled from the canvas</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the shape below the mouse or null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "CanvasPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "CoronaDecorationPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "<p>This decorations hides draw2d.Ports which are to far from the current cursor position.\nThis makes the canvas more clean if you have a lot of nodes on it.<br>\nYou didn't see a bunch of ports.</p>",
      "extends": [
        "draw2d.policy.canvas.DecorationPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "updatePorts",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Update all ports with the new calculated opacity in relation to the distance to the current\nmouse position</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is installed into the canvas.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is deinstalled from the canvas</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the shape below the mouse or null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "CoronaDecorationPolicy",
        "description": "",
        "parameters": [],
        "examples": [
          "// install the policy to the canvas\n\n     // add some demo figure to the canvas\n     canvas.add(new draw2d.shape.node.Start({x: 10,  y: 30}));\n     canvas.add(new draw2d.shape.node.End({x: 90,  y: 90}));\n     canvas.add(new draw2d.shape.node.Between({ x: 310, y: 30}));\n\n     canvas.add(new draw2d.shape.basic.Label({text:\"move the mouse and you see that ports are hidden if the mouse far from it\"}),5,5);\n\n     canvas.installEditPolicy(new draw2d.policy.canvas.CoronaDecorationPolicy());"
        ]
      }
    },
    {
      "name": "DecorationPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "<p>The base class for any canvas decoration like grid, chessboard, graph paper or\nother.</p>",
      "extends": [
        "draw2d.policy.canvas.CanvasPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is installed into the canvas.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is deinstalled from the canvas</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the shape below the mouse or null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "DecorationPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "DefaultKeyboardPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "<p>Standard keyboard policy. This is the standard installed keyboard policy.\n<br>\n<br>\nKeyboard commands</p>\n<ul>\n   <li>DEL    - delete selection</li>\n</ul>",
      "extends": [
        "draw2d.policy.canvas.KeyboardPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onKeyDown",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Callback if the user press a key.<br>\nThis implementation checks only if the <b>DEL</b> has been pressed and creates an\nCommandDelete if this happens.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the related canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "keyCode",
              "type": "Number",
              "description": "<p>the pressed key</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onKeyUp",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Callback if the user release a key</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the related canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "keyCode",
              "type": "Number",
              "description": "<p>the pressed key</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is installed into the canvas.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is deinstalled from the canvas</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the shape below the mouse or null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "DefaultKeyboardPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "DropInterceptorPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "<p>Drop interceptors are basically event handlers from which you can return a value\nthat tells draw2d to abort what it is that it was doing.<br>\n<br>\nInterceptors can be registered via the registerEditPolicy method on the draw2d canvas just like any other\nedit policies.<br>\n<br>\nThe <b>delegateTarget</b> method is responsible for all drop event especially to all connection and port handling.</p>",
      "extends": [
        "draw2d.policy.canvas.CanvasPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "delegateTarget",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user want connect a port with any kind draw2d.Figure.<br>\nReturn a non <b>null</b> value if the interceptor accept the connect event.<br>\n<br>\nIt is possible to delegate the drop event to another figure if the policy\nreturns another figure. This is useful if a figure want to accept a port\ndrop event and delegates this drop event to another port.<br></p>",
          "parameters": [
            {
              "name": "connectInquirer",
              "type": "draw2d.Figure",
              "description": "<p>the figure who wants connect</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "connectIntent",
              "type": "draw2d.Figure",
              "description": "<p>the potential connect target</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.Figure",
            "description": "<p>the calculated connect intent or <b>null</b> if the interceptor uses the veto right</p>"
          }
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is installed into the canvas.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is deinstalled from the canvas</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the shape below the mouse or null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "DropInterceptorPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "ExtendedKeyboardPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "<p>Extended keyboard policy to <b>delete</b> and <b>group</b> figures in the canvas.\n<br>\nKeyboard commands</p>\n<ul>\n   <li>DEL    - delete selection</li>\n   <li>Ctrl+G - group/ungroup selection</li>\n   <li>Ctrl+B - send current selection in the background (toBack)</li>\n   <li>Ctrl+F - send current selection in the foreground (toFront)</li>\n</ul>",
      "extends": [
        "draw2d.policy.canvas.KeyboardPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onKeyDown",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Callback if the user press a key</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the related canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "keyCode",
              "type": "Number",
              "description": "<p>the pressed key</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onKeyUp",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Callback if the user release a key</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the related canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "keyCode",
              "type": "Number",
              "description": "<p>the pressed key</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is installed into the canvas.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is deinstalled from the canvas</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the shape below the mouse or null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "ExtendedKeyboardPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "FadeoutDecorationPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "<p>Install this edit policy in a canvas if you want fadeout all decorations like ports, resize handles\nif the user didn't move the mouse. This is good for a clean representation of your diagram.</p>",
      "extends": [
        "draw2d.policy.canvas.DecorationPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new fade out policy. Don't forget to install them into the canvas.</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onTimer",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Timerfucntion to show/hide the related ports</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is installed into the canvas.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is deinstalled from the canvas</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "FadeoutDecorationPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "GhostMoveSelectionPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "<p>A drag&amp;Drop feedback handler for the canvas. The policy didn't move the\nshapes in real time rather it shows a ghost rectangle as feedback. <br>\n<br>\nThe shapes are updated after the drag&amp;drop operation.</p>",
      "extends": [
        "draw2d.policy.canvas.SingleSelectionPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "select",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Selects the given figure within the canvas. The policy must unselect already selected\nfigures or show any decorations.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the related Canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "unselect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Unselect the given figure in the canvas and remove all resize handles</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is installed into the canvas.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is deinstalled from the canvas</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "GhostMoveSelectionPolicy",
        "description": "",
        "parameters": [],
        "examples": [
          "// install the policy to the canvas\n     canvas.installEditPolicy(new draw2d.policy.canvas.GhostMoveSelectionPolicy());\n\n     // add some demo figure to the canvas\n     canvas.add(new draw2d.shape.basic.Circle({diameter: 50, x: 10,  y: 30}));\n     canvas.add(new draw2d.shape.basic.Circle({diameter: 30, x: 90,  y: 50}));\n     canvas.add(new draw2d.shape.basic.Circle({diameter: 60, x: 110, y: 30}));\n\n     canvas.add(new draw2d.shape.basic.Label({text:\"move the circle to see the drag&drop feedback\"}),5,5);"
        ]
      }
    },
    {
      "name": "KeyboardPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "<p>Default interface for keyboard interaction with the canvas.</p>",
      "extends": [
        "draw2d.policy.canvas.CanvasPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onKeyUp",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Callback if the user release a key</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the related canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "keyCode",
              "type": "Number",
              "description": "<p>the pressed key</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onKeyDown",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Callback if the user press a key down</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the related canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "keyCode",
              "type": "Number",
              "description": "<p>the pressed key</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is installed into the canvas.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is deinstalled from the canvas</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the shape below the mouse or null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "KeyboardPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "PanningSelectionPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "",
      "extends": [
        "draw2d.policy.canvas.SingleSelectionPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new Router object</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "select",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Selects the given figure within the canvas. The policy must unselect already selected\nfigures or show any decorations.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the related Canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "unselect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Unselect the given figure in the canvas and remove all resize handles</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is installed into the canvas.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is deinstalled from the canvas</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "PanningSelectionPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "ReadOnlySelectionPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "",
      "extends": [
        "draw2d.policy.canvas.SelectionPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new Router object</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been installed.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas/draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been uninstalled.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "select",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Selects the given figure within the canvas. The policy must unselect already selected\nfigures or show any decorations.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "unselect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Unselect the given figure in the canvas and remove all resize handles</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the shape below the mouse or null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "ReadOnlySelectionPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "SelectionPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "",
      "extends": [
        "draw2d.policy.canvas.CanvasPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new selection policy</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "select",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Selects the given figure within the canvas. The policy must unselect already selected\nfigures or show any decorations.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "unselect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Unselect the given figure in the canvas and remove all resize handles</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is installed into the canvas.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is deinstalled from the canvas</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the shape below the mouse or null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "SelectionPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "ShowChessboardEditPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "<p>Just to paint a grid in the background of a canvas.</p>",
      "extends": [
        "draw2d.policy.canvas.DecorationPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new constraint policy for snap to grid</p>",
          "parameters": [
            {
              "name": "grid",
              "type": "Number",
              "description": "<p>the grid width of the canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "setGrid",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Activate the grid and set the CSS properties for the SVG canvas</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is installed into the canvas.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is deinstalled from the canvas</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the shape below the mouse or null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "ShowChessboardEditPolicy",
        "description": "",
        "parameters": [],
        "examples": [
          "canvas.installEditPolicy(new draw2d.policy.canvas.ShowChessboardEditPolicy());\n   let shape =  new draw2d.shape.basic.Text({text:\"This is a simple text in a canvas with chessboard background.\"});\n\n   canvas.add(shape,40,10);"
        ]
      }
    },
    {
      "name": "ShowDimetricGridEditPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "<p>A canvas decoration which paints a dimetric in the background.\n<br>\n<br></p>",
      "extends": [
        "draw2d.policy.canvas.DecorationPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new constraint policy for snap to grid</p>",
          "parameters": [
            {
              "name": "grid",
              "type": "Number",
              "description": "<p>the grid width of the canvas</p>",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "setGridColor",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Set the grid color</p>",
          "parameters": [
            {
              "name": "color",
              "type": [
                "draw2d.util.Color",
                "String"
              ],
              "description": "<p>a color object or the CSS string declaration for a color</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "5.0.3",
          "examples": []
        },
        {
          "name": "setGrid",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Set a new grid width/height</p>",
          "parameters": [
            {
              "name": "grid",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "5.0.3",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is installed into the canvas.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is deinstalled from the canvas</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the shape below the mouse or null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "ShowDimetricGridEditPolicy",
        "description": "",
        "parameters": [],
        "examples": [
          "canvas.installEditPolicy(new draw2d.policy.canvas.ShowDimetricGridEditPolicy());\n   let shape =  new draw2d.shape.basic.Text({text:\"This is a simple text in a canvas with grid background.\"});\n\n   canvas.add(shape,40,10);"
        ]
      }
    },
    {
      "name": "ShowDotEditPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "<p>Paint a dotted pattern in the background of the canvas.</p>",
      "extends": [
        "draw2d.policy.canvas.DecorationPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>show a dot grid in the canvas for decoration.</p>",
          "parameters": [
            {
              "name": "dotDistance",
              "type": "Number",
              "description": "<p>the distance or grid width between the dots.</p>",
              "default": "",
              "optional": true,
              "nullable": ""
            },
            {
              "name": "dotRadius",
              "type": "Number",
              "description": "<p>the radius of the dots.</p>",
              "default": "",
              "optional": true,
              "nullable": ""
            },
            {
              "name": "dotColor",
              "type": [
                "draw2d.util.Color",
                "String"
              ],
              "description": "<p>the color for the dots.</p>",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "setGrid",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "zoom",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is installed into the canvas.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is deinstalled from the canvas</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the shape below the mouse or null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "ShowDotEditPolicy",
        "description": "",
        "parameters": [],
        "examples": [
          "canvas.installEditPolicy(new draw2d.policy.canvas.ShowDotEditPolicy());\n   let shape =  new draw2d.shape.basic.Text({text:\"This is a simple text in a canvas with dotted background.\"});\n\n   canvas.add(shape,40,10);"
        ]
      }
    },
    {
      "name": "ShowGridEditPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "<p>A cavas decoration which paints a grid in the background.\n<br>\n<br></p>",
      "extends": [
        "draw2d.policy.canvas.DecorationPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new constraint policy for snap to grid</p>",
          "parameters": [
            {
              "name": "grid",
              "type": "Number",
              "description": "<p>the grid width of the canvas</p>",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "setGridColor",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Set the grid color</p>",
          "parameters": [
            {
              "name": "color",
              "type": [
                "draw2d.util.Color",
                "String"
              ],
              "description": "<p>a color object or the CSS string declaration for a color</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "5.0.3",
          "examples": []
        },
        {
          "name": "setGrid",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "zoom",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is installed into the canvas.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is deinstalled from the canvas</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the shape below the mouse or null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "ShowGridEditPolicy",
        "description": "",
        "parameters": [],
        "examples": [
          "canvas.installEditPolicy(new draw2d.policy.canvas.ShowGridEditPolicy());\n   let shape =  new draw2d.shape.basic.Text({text:\"This is a simple text in a canvas with grid background.\"});\n\n   canvas.add(shape,40,10);"
        ]
      }
    },
    {
      "name": "SingleSelectionPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "",
      "extends": [
        "draw2d.policy.canvas.SelectionPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new Router object</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "select",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the related Canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "select",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Selects the given figure within the canvas. The policy must unselect already selected\nfigures or show any decorations.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "unselect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Unselect the given figure in the canvas and remove all resize handles</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is installed into the canvas.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is deinstalled from the canvas</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "SingleSelectionPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "SnapToCenterEditPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "<p>Snapping is based on the existing children of a container. When snapping a shape,\nthe center of the bounding box will snap to the center of other figures of the given canvas.</p>",
      "extends": [
        "draw2d.policy.canvas.SnapToEditPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new constraint policy for snap to geometry</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the shape below the mouse or null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "snap",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Adjust the coordinates to the canvas neighbours</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the related canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure to snap</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "modifiedPos",
              "type": "draw2d.geo.Point",
              "description": "<p>the already modified position of the figure (e.g. from an another Policy)</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "originalPos",
              "type": "draw2d.geo.Point",
              "description": "<p>the original requested position of the figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Point",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "hideHorizontalGuides",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Hide the horizontal snapping guides</p>",
          "parameters": [
            {
              "name": "fast",
              "type": "Boolean",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "hideVerticalGuides",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Hide the horizontal snapüing guides</p>",
          "parameters": [
            {
              "name": "soft",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "setLineColor",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Set the color of the snap line.</p>\n<pre><code>// Alternatively you can use the attr method:\npolicy.attr({\n  lineColor: color\n});</code></pre>",
          "parameters": [
            {
              "name": "color",
              "type": [
                "draw2d.util.Color",
                "String"
              ],
              "description": "<p>The new color of the line.</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "getLineColor",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Return the current paint color.</p>",
          "parameters": [],
          "inherited": true,
          "since": "5.6.1",
          "examples": [],
          "returns": {
            "type": "draw2d.util.Color",
            "description": "<p>The paint color of the line.</p>"
          }
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is installed into the canvas.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is deinstalled from the canvas</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "SnapToCenterEditPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "SnapToDimetricGridEditPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "<p>A helper used to perform snapping to a grid, which is specified on the canvas via the various\nproperties defined in this class.</p>",
      "extends": [
        "draw2d.policy.canvas.ShowDimetricGridEditPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new constraint policy for snap to grid</p>",
          "parameters": [
            {
              "name": "grid",
              "type": "Number",
              "description": "<p>the grid width of the canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "snap",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Applies a snapping correction to the given result.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the related canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure to snap</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "modifiedPos",
              "type": "draw2d.geo.Point",
              "description": "<p>the already modified position of the figure (e.g. from an another Policy)</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "originalPos",
              "type": "draw2d.geo.Point",
              "description": "<p>the original requested position of the figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "2.3.0",
          "examples": []
        },
        {
          "name": "setGridColor",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Set the grid color</p>",
          "parameters": [
            {
              "name": "color",
              "type": [
                "draw2d.util.Color",
                "String"
              ],
              "description": "<p>a color object or the CSS string declaration for a color</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.0.3",
          "examples": []
        },
        {
          "name": "setGrid",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Set a new grid width/height</p>",
          "parameters": [
            {
              "name": "grid",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.0.3",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is installed into the canvas.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is deinstalled from the canvas</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the shape below the mouse or null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "SnapToDimetricGridEditPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "SnapToEditPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "<p>A helper used by Tools for snapping certain mouse interactions.</p>",
      "extends": [
        "draw2d.policy.canvas.CanvasPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new constraint policy for snap to grid</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "setLineColor",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Set the color of the snap line.</p>\n<pre><code>// Alternatively you can use the attr method:\npolicy.attr({\n  lineColor: color\n});</code></pre>",
          "parameters": [
            {
              "name": "color",
              "type": [
                "draw2d.util.Color",
                "String"
              ],
              "description": "<p>The new color of the line.</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "getLineColor",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Return the current paint color.</p>",
          "parameters": [],
          "inherited": false,
          "since": "5.6.1",
          "examples": [],
          "returns": {
            "type": "draw2d.util.Color",
            "description": "<p>The paint color of the line.</p>"
          }
        },
        {
          "name": "snap",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Adjust the coordinates to the given constraint of the policy.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the related canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure to snap</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "modifiedPos",
              "type": "draw2d.geo.Point",
              "description": "<p>the already modified position of the figure (e.g. from an another Policy)</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "originalPos",
              "type": "draw2d.geo.Point",
              "description": "<p>the original requested position of the figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is installed into the canvas.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is deinstalled from the canvas</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the shape below the mouse or null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "SnapToEditPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "SnapToGeometryEditPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "<p>Snapping is based on the existing children of a container. When snapping a shape,\nthe edges of the bounding box will snap to edges of other rectangles generated\nfrom the children of the given canvas.</p>",
      "extends": [
        "draw2d.policy.canvas.SnapToEditPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new constraint policy for snap to geometry</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the shape below the mouse or null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "snap",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Adjust the coordinates to the canvas neighbours</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the related canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure to snap</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "modifiedPos",
              "type": "draw2d.geo.Point",
              "description": "<p>the already modified position of the figure (e.g. from an another Policy)</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "originalPos",
              "type": "draw2d.geo.Point",
              "description": "<p>the original requested position of the figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Point",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "snapRectangle",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>calculates the snapped position of the rectangle.</p>",
          "parameters": [
            {
              "name": "inputBounds",
              "type": "draw2d.geo.Rectangle",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        },
        {
          "name": "setLineColor",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Set the color of the snap line.</p>\n<pre><code>// Alternatively you can use the attr method:\npolicy.attr({\n  lineColor: color\n});</code></pre>",
          "parameters": [
            {
              "name": "color",
              "type": [
                "draw2d.util.Color",
                "String"
              ],
              "description": "<p>The new color of the line.</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "getLineColor",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Return the current paint color.</p>",
          "parameters": [],
          "inherited": true,
          "since": "5.6.1",
          "examples": [],
          "returns": {
            "type": "draw2d.util.Color",
            "description": "<p>The paint color of the line.</p>"
          }
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is installed into the canvas.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is deinstalled from the canvas</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "SnapToGeometryEditPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "SnapToGridEditPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "<p>A helper used to perform snapping to a grid, which is specified on the canvas via the various\nproperties defined in this class.</p>",
      "extends": [
        "draw2d.policy.canvas.ShowGridEditPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new constraint policy for snap to grid</p>",
          "parameters": [
            {
              "name": "grid",
              "type": "Number",
              "description": "<p>the grid width of the canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "setGrid",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Set a new grid width/height</p>",
          "parameters": [
            {
              "name": "grid",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "5.0.3",
          "examples": []
        },
        {
          "name": "snap",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Applies a snapping correction to the given result.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the related canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure to snap</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "modifiedPos",
              "type": "draw2d.geo.Point",
              "description": "<p>the already modified position of the figure (e.g. from an another Policy)</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "originalPos",
              "type": "draw2d.geo.Point",
              "description": "<p>the original requested position of the figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "2.3.0",
          "examples": []
        },
        {
          "name": "setGridColor",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Set the grid color</p>",
          "parameters": [
            {
              "name": "color",
              "type": [
                "draw2d.util.Color",
                "String"
              ],
              "description": "<p>a color object or the CSS string declaration for a color</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.0.3",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is installed into the canvas.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is deinstalled from the canvas</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the shape below the mouse or null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "SnapToGridEditPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "SnapToInBetweenEditPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "<p>Snapping is based on the existing children of a container. When snapping a shape,\nthe edges of the bounding box will snap to edges of other rectangles generated\nfrom the children of the given canvas.</p>",
      "extends": [
        "draw2d.policy.canvas.SnapToEditPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new constraint policy for snap to geometry</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "snap",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Adjust the coordinates to the canvas neighbours</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the related canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure to snap</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "modifiedPos",
              "type": "draw2d.geo.Point",
              "description": "<p>the already modified position of the figure (e.g. from an another Policy)</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "originalPos",
              "type": "draw2d.geo.Point",
              "description": "<p>the original requested position of the figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Point",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "hideHorizontalGuides",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Hide the horizontal snaping guides</p>",
          "parameters": [
            {
              "name": "fast",
              "type": "Boolean",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "setLineColor",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Set the color of the snap line.</p>\n<pre><code>// Alternatively you can use the attr method:\npolicy.attr({\n  lineColor: color\n});</code></pre>",
          "parameters": [
            {
              "name": "color",
              "type": [
                "draw2d.util.Color",
                "String"
              ],
              "description": "<p>The new color of the line.</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "getLineColor",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Return the current paint color.</p>",
          "parameters": [],
          "inherited": true,
          "since": "5.6.1",
          "examples": [],
          "returns": {
            "type": "draw2d.util.Color",
            "description": "<p>The paint color of the line.</p>"
          }
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is installed into the canvas.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is deinstalled from the canvas</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "SnapToInBetweenEditPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "SnapToVerticesEditPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "<p>Snapping is based on the existing children of a container. When snapping a shape,\nthe edges of the bounding box will snap to edges of other rectangles generated\nfrom the children of the given canvas.</p>",
      "extends": [
        "draw2d.policy.canvas.SnapToEditPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new constraint policy for snap to geometry</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the shape below the mouse or null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "snap",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Adjust the coordinates to the canvas neighbours</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the related canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure to snap</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "modifiedPos",
              "type": "draw2d.geo.Point",
              "description": "<p>the already modified position of the figure (e.g. from an another Policy)</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "originalPos",
              "type": "draw2d.geo.Point",
              "description": "<p>the original requested position of the figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Point",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "setLineColor",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Set the color of the snap line.</p>\n<pre><code>// Alternatively you can use the attr method:\npolicy.attr({\n  lineColor: color\n});</code></pre>",
          "parameters": [
            {
              "name": "color",
              "type": [
                "draw2d.util.Color",
                "String"
              ],
              "description": "<p>The new color of the line.</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "getLineColor",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Return the current paint color.</p>",
          "parameters": [],
          "inherited": true,
          "since": "5.6.1",
          "examples": [],
          "returns": {
            "type": "draw2d.util.Color",
            "description": "<p>The paint color of the line.</p>"
          }
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is installed into the canvas.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is deinstalled from the canvas</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "SnapToVerticesEditPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "WheelZoomPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "<p>Zoom support for a canvas. Use the mouse wheel and the shift key to zoom in/out.</p>",
      "extends": [
        "draw2d.policy.canvas.CanvasPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "setZoom",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Set the new zoom level of the canvas.</p>",
          "parameters": [
            {
              "name": "zoomFactor",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "animated",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "_zoom",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "zoom",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "center",
              "type": "draw2d.geo.Point",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is installed into the canvas.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is deinstalled from the canvas</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the shape below the mouse or null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "WheelZoomPolicy",
        "description": "",
        "parameters": [],
        "examples": [
          "canvas.installEditPolicy(new draw2d.policy.canvas.WheelZoomPolicy());\n   let shape =  new draw2d.shape.basic.Text({text:\"Use the mouse wheel + SHIFT to zoom\"});\n\n   canvas.add(shape,40,10);"
        ]
      }
    },
    {
      "name": "ZoomPolicy",
      "namespace": "draw2d.policy.canvas",
      "description": "<p>Generic zoom policy installable into a canvas object.\nThis is the legacy implementation of the very first zooming in\nDraw2D. You can use this implementation if you want backward compatible.</p>",
      "extends": [
        "draw2d.policy.canvas.CanvasPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "setZoom",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Set the new zoom factor for the canvas. The value must be between [0.01..10]</p>\n<pre><code>// you can register an eventhandler to listen to the zoom factor of the canvas.\n</code></pre>\n<p>//\ncanvas.on(&quot;zoom&quot;, function(emitterFigure, zoomData){\nalert(&quot;canvas zoomed to:&quot;+zoomData.factor);\n});</p>",
          "parameters": [
            {
              "name": "zoomFactor",
              "type": "Number",
              "description": "<p>new zoom factor.</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "animated",
              "type": "Boolean",
              "description": "<p>set it to true for smooth zoom in/out</p>",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is installed into the canvas.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the policy is deinstalled from the canvas</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseMove",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx",
              "type": "Number",
              "description": "<p>The x diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy",
              "type": "Number",
              "description": "<p>The y diff between start of dragging and this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dx2",
              "type": "Number",
              "description": "<p>The x diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "dy2",
              "type": "Number",
              "description": "<p>The y diff since the last call of this dragging operation</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onMouseUp",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the shape below the mouse or null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse in the canvas.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "onClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "3.0.0",
          "examples": []
        },
        {
          "name": "onDoubleClick",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the canvas if the user double click on a figure.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure under the double click event. Can be null</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseX",
              "type": "Number",
              "description": "<p>the x coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "mouseY",
              "type": "Number",
              "description": "<p>the y coordinate of the mouse during the click event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.1.0",
          "examples": []
        },
        {
          "name": "onMouseWheel",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>called if the user uses the mouse wheel.</p>",
          "parameters": [
            {
              "name": "wheelDelta",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.8.0",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to preven tthe default event operation (e.g. scrolling)</p>"
          }
        },
        {
          "name": "createMonochromGif",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W<em>H);.\nThen, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y</em>W] = 1;.\nFinally, create the image: let my_gif = createGif(W, H, pixels, color);\n&quot;0&quot; pixels are transparent.\nThe <b>color</b> defines the foreground color.</p>\n<p>Now, you can specify this image as the SRC attribute of an IMG tag: document.write(&quot;&lt;IMG SRC=&quot;&quot; + my_gif + &quot;&quot;&gt;&quot;);\nor for the canvas as background-image css attribute.</p>",
          "parameters": [
            {
              "name": "w",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "d",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "color",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "String",
            "description": ""
          }
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "ZoomPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    }
  ],
  "namespaces": []
}