[
  {
    "text": "Basic Figures",
    "children": [
      {
        "name": "galerie_shape_basic",
        "text": "draw2d.shape.basic.*",
        "description": "Figures in the draw2d.shape.basic.* package",
        "url": "galerie_shape_basic/index.html",
        "icon": "galerie_shape_basic/icon.png",
        "status": "normal"
      },
      {
        "name": "galerie_shape_diagram",
        "text": "draw2d.shape.diagram.*",
        "description": "Figures in the draw2d.shape.diagram.* package",
        "url": "galerie_shape_diagram/index.html",
        "icon": "galerie_shape_diagram/icon.png",
        "status": "normal"
      },
      {
        "name": "galerie_shape_analog",
        "text": "draw2d.shape.analog.*",
        "description": "Figures in the draw2d.shape.analog.* package",
        "url": "galerie_shape_analog/index.html",
        "icon": "galerie_shape_analog/icon.png",
        "status": "normal"
      },
      {
        "name": "galerie_shape_widget",
        "text": "draw2d.shape.widget.*",
        "description": "Figures in the draw2d.shape.widget.* package",
        "url": "galerie_shape_widget/index.html",
        "icon": "galerie_shape_widget/icon.png",
        "status": "normal"
      },
      {
        "name": "galerie_shape_icon",
        "text": "draw2d.shape.icon.*",
        "description": "Figures in the draw2d.shape.icon.* package",
        "url": "galerie_shape_icon/index.html",
        "icon": "galerie_shape_icon/icon.png",
        "status": "normal"
      },
      {
        "name": "galerie_shape_node",
        "text": "draw2d.shape.node.*",
        "description": "Figures in the draw2d.shape.node.* package. Some standard in/out nodes.",
        "url": "galerie_shape_node/index.html",
        "icon": "galerie_shape_node/icon.png",
        "status": "normal"
      }
    ]
  },
  {
    "text": "Composite Figures",
    "children": [
      {
        "name": "composite_raft",
        "text": "Raft Composite",
        "description": "Raft shape is a shape, which aggregate multiple primitive figures which are aboard the raft shape.",
        "url": "composite_raft/index.html",
        "icon": "composite_raft/icon.png",
        "status": "normal"
      },
      {
        "name": "composite_group",
        "text": "Group Composite",
        "description": "A group is a figure that acts as a transparent container for other figures.",
        "url": "composite_group/index.html",
        "icon": "composite_group/icon.png",
        "status": "normal"
      },
      {
        "name": "composite_jailhouse",
        "text": "Jailhouse Composite",
        "description": "A jailhouse organizes graphical objects into groups that share a common set of default properties and Z-order. Figures cannot moved outside of a jailhouse composite.",
        "url": "composite_jailhouse/index.html",
        "icon": "composite_jailhouse/icon.png",
        "status": "normal"
      }
    ]
  },
  {
    "text": "Custom Figures",
    "children": [
      {
        "name": "shape_custom_simple",
        "text": "Triangle Figure",
        "description": "Create a simple triangle figure. No magic, just to show how to implement your own vector figure.",
        "url": "shape_custom_simple/index.html",
        "icon": "shape_custom_simple/icon.png",
        "status": "normal"
      },
      {
        "name": "shape_timer",
        "text": "Timer Label",
        "description": "A custom label with an internal timer which updates the text.",
        "url": "shape_timer/index.html",
        "icon": "shape_timer/icon.png",
        "status": "normal"
      },
      {
        "name": "shape_anim_circle",
        "text": "Animated Figure",
        "description": "A SetFigure and a little bit of sinus/cosinus mathematics. It is possible to drag&drop the figure as well.",
        "url": "shape_anim_circle/index.html",
        "icon": "shape_anim_circle/icon.png",
        "status": "normal"
      },
      {
        "name": "figure_locator",
        "text": "Locator for children shapes",
        "description": "Usage of a 'Locator' for a label which is bounded to a shape.",
        "url": "figure_locator/index.html",
        "icon": "figure_locator/icon.png",
        "status": "normal"
      },
      {
        "name": "connection_with_contextmenu",
        "text": "Connection with context menu",
        "description": "A Connections which provides a simple context menu. Overrides the default connection type.",
        "url": "connection_with_contextmenu/index.html",
        "icon": "connection_with_contextmenu/icon.png",
        "status": "normal"
      },
      {
        "name": "policy_selectionmenu",
        "text": "Show menu on selection",
        "description": "Install a menu policy into a shape to provide a flyout menu on selection.",
        "url": "policy_selectionmenu/index.html",
        "icon": "policy_selectionmenu/icon.png",
        "status": "normal"
      },
      {
        "name": "shape_db",
        "text": "Dynamic ports and rows in a shape",
        "description": "Shape with a method to add or remove a row and the related ports.",
        "url": "shape_db/index.html",
        "icon": "shape_db/icon.png",
        "status": "normal"
      },
      {
        "name": "shape_collapsible",
        "text": "Collapsible shape",
        "description": "Example implementation of an collapsible shape",
        "url": "shape_collapsible/index.html",
        "icon": "shape_collapsible/icon.png",
        "status": "normal"
      },
      {
        "name": "shape_zoom_stack",
        "text": "Change figure on Zoom",
        "description": "Change the visual representation if you zoom in/out to the canvas",
        "url": "shape_zoom_stack/index.html",
        "icon": "shape_zoom_stack/icon.png",
        "status": "normal"
      },
      {
        "name": "shape_zoom_svg",
        "text": "Change SVG on Zoom",
        "description": "Change the SVG of a figure if you zoom in/out to the canvas",
        "url": "shape_zoom_svg/index.html",
        "icon": "shape_zoom_svg/icon.png",
        "status": "normal"
      },
      {
        "name": "shape_tablelayout",
        "text": "Table layout",
        "description": "Place child figures in the parent table layout.",
        "url": "shape_tablelayout/index.html",
        "icon": "shape_tablelayout/icon.png",
        "status": "updated"
      }
    ]
  },
  {
    "text": "Interaction with Figures",
    "children": [
      {
        "name": "interaction_dblclick_figure",
        "text": "DblClick Figure",
        "description": "Example how to handle a double click within a figure.",
        "url": "interaction_dblclick_figure/index.html",
        "icon": "interaction_dblclick_figure/icon.png",
        "status": "normal"
      },
      {
        "name": "interaction_dblclick_policy",
        "text": "DblClick Policy",
        "description": "Example how to handle a double click with a policy.",
        "url": "interaction_dblclick_policy/index.html",
        "icon": "interaction_dblclick_policy/icon.png",
        "status": "normal"
      },
      {
        "name": "interaction_labeledit_inplace",
        "text": "DblClick Figure with label",
        "description": "Event handling of a shape with children",
        "url": "interaction_labeledit_inplace/index.html",
        "icon": "interaction_labeledit_inplace/icon.png",
        "status": "normal"
      },
      {
        "name": "interaction_click",
        "text": "Click Figure with Sparkline",
        "description": "Using timer, Sparkline and a simple click event to create a simple flow diagram",
        "url": "interaction_click/index.html",
        "icon": "interaction_click/icon.png",
        "status": "normal"
      },
      {
        "name": "interaction_slider",
        "text": "Slider / Sparkline",
        "description": "Connect a slider as input for a animated Sparkline",
        "url": "interaction_slider/index.html",
        "icon": "interaction_slider/icon.png",
        "status": "normal"
      },
      {
        "name": "interaction_pie",
        "text": "Slider with Pie Chart",
        "description": "Using 3 sliders in combination with a pie chart. The sliders are the data source for the pie chart.",
        "url": "interaction_pie/index.html",
        "icon": "interaction_pie/icon.png",
        "status": "normal"
      },
      {
        "name": "connection_labeledit_dialog",
        "text": "Edit a Label with a dialog",
        "description": "How to register a default editor for a label",
        "url": "connection_labeledit_dialog/index.html",
        "icon": "connection_labeledit_dialog/icon.png",
        "status": "normal"
      },
      {
        "name": "connection_labeledit_inplace",
        "text": "Inplace label editor",
        "description": "How to register an inplace editor for a label",
        "url": "connection_labeledit_inplace/index.html",
        "icon": "connection_labeledit_inplace/icon.png",
        "status": "normal"
      },
      {
        "name": "interaction_toFront",
        "text": "Bring to front",
        "description": "Bring an shape to front if the user click on them",
        "url": "interaction_toFront/index.html",
        "icon": "interaction_toFront/icon.png",
        "status": "normal"
      },
      {
        "name": "interaction_draggable_decoration",
        "text": "Draggable figure decoration",
        "description": "A dynamic figure decoration which can be move via drag&drop",
        "url": "interaction_draggable_decoration/index.html",
        "icon": "interaction_draggable_decoration/icon.png",
        "status": "updated"
      }
    ]
  },
  {
    "text": "Customize defaults",
    "children": [
      {
        "name": "resizehandle_replace_global",
        "text": "Custom ResizeHandles",
        "description": "Replace the default ResizeHandles with your custom implementation",
        "url": "resizehandle_replace_global/index.html",
        "icon": "resizehandle_replace_global/icon.png",
        "status": "normal"
      },
      {
        "name": "resizehandle_styled_css",
        "text": "Style ResizeHandles via CSS",
        "description": "Override the default color of the resize handles with CSS",
        "url": "resizehandle_styled_css/index.html",
        "icon": "resizehandle_styled_css/icon.png",
        "status": "normal"
      }
    ]
  },
  {
    "text": "Managing port",
    "children": [
      {
        "name": "port_semantic_group",
        "text": "Restricted Connections",
        "description": "Only ports in the same semantic group can be connected.",
        "url": "port_semantic_group/index.html",
        "icon": "port_semantic_group/icon.png",
        "status": "normal"
      },
      {
        "name": "port_locator",
        "text": "Position of ports",
        "description": "Add ports to a figure via API call with an locator for position calculation.",
        "url": "port_locator/index.html",
        "icon": "port_locator/icon.png",
        "status": "normal"
      },
      {
        "name": "port_serialize",
        "text": "Create ports from JSON",
        "description": "Load and save ports of shape to JSON",
        "url": "port_serialize/index.html",
        "icon": "port_serialize/icon.png",
        "status": "normal"
      },
      {
        "name": "port_decoration",
        "text": "Create ports with configurable default values",
        "description": "Create a port with a visual configuration shape to select the default value to use",
        "url": "port_decoration/index.html",
        "icon": "port_decoration/icon.png",
        "status": "normal"
      },
      {
        "name": "port_hide",
        "text": "Hide/Show ports if connected",
        "description": "Dynamic show or hides ports if they are connected. Show them again if you remove the connection",
        "url": "port_hide/index.html",
        "icon": "port_hide/icon.png",
        "status": "normal"
      }
    ]
  },
  {
    "text": "Build in Functions",
    "children": [
      {
        "name": "buildin_commandstack",
        "text": "Undo & Redo",
        "description": "Usage of the internal CommandStack for Undo/Redo operations",
        "url": "buildin_commandstack/index.html",
        "icon": "buildin_commandstack/icon.png",
        "status": "normal"
      },
      {
        "name": "buildin_zoom",
        "text": "Zoom",
        "description": "Simple setZoom and getZoom method in the Canvas class",
        "url": "buildin_zoom/index.html",
        "icon": "buildin_zoom/icon.png",
        "status": "normal"
      },
      {
        "name": "buildin_bridge",
        "text": "Bridge",
        "description": "Automatic bridging of crossing connectors",
        "url": "buildin_bridge/index.html",
        "icon": "buildin_bridge/icon.png",
        "status": "normal"
      },
      {
        "name": "buildin_event",
        "text": "Canvas events",
        "description": "Canvas events for figure add, remove, zoom, clear,..",
        "url": "buildin_event/index.html",
        "icon": "buildin_event/icon.png",
        "status": "normal"
      }
    ]
  },
  {
    "text": "Tooltip Examples",
    "children": [
      {
        "name": "tooltip_diy",
        "text": "Basic Tooltip",
        "description": "Tooltip implementation without any third party lib.",
        "url": "tooltip_diy/index.html",
        "icon": "tooltip_diy/icon.png",
        "status": "normal"
      }
    ]
  },
  {
    "text": "Databinding",
    "children": [
      {
        "name": "databinding_watchjs",
        "text": "Watch.JS",
        "description": "Create a property sheet and sync the data with the third party lib watch.JS",
        "url": "databinding_watchjs/index.html",
        "icon": "databinding_watchjs/icon.png",
        "status": "normal"
      },
      {
        "name": "databinding_backbone",
        "text": "Backbone.JS",
        "description": "Databinding with backboneJS without epoxy",
        "url": "databinding_backbone/index.html",
        "icon": "databinding_backbone/icon.png",
        "status": "normal"
      },
      {
        "name": "databinding_backbone_modelbinder",
        "text": "Backbone.ModelBinder",
        "description": "Databinding with backboneJS with the support of the ModelBinder lib",
        "url": "databinding_backbone_modelbinder/index.html",
        "icon": "databinding_backbone_modelbinder/icon.png",
        "status": "normal"
      },
      {
        "name": "databinding_js",
        "text": "JavaScript",
        "description": "Implementation of a property view without any additional lib for the databinding",
        "url": "databinding_js/index.html",
        "icon": "databinding_js/icon.png",
        "status": "normal"
      },
      {
        "name": "databinding_rivets",
        "text": "RivetsJS",
        "description": "Databinding with the integration of the RivetsJS lib",
        "url": "databinding_rivets/index.html",
        "icon": "databinding_rivets/icon.png",
        "status": "normal"
      }
    ]
  },
  {
    "text": "Edit Policy",
    "children": [
      {
        "name": "policy_canvas_decoration",
        "text": "Canvas Decoration",
        "description": "Add special behavior to the canvas related the port visibility.",
        "url": "policy_canvas_decoration/index.html",
        "icon": "policy_canvas_decoration/icon.png",
        "status": "normal"
      },
      {
        "name": "policy_selection_handling",
        "text": "Selection Handling",
        "description": "Different kind of policies for selection handling, panning and editing",
        "url": "policy_selection_handling/index.html",
        "icon": "policy_selection_handling/icon.png",
        "status": "normal"
      },
      {
        "name": "policy_selection_feedback",
        "text": "Selection Feedback",
        "description": "Using different policies for the selection feedback of a shape",
        "url": "policy_selection_feedback/index.html",
        "icon": "policy_selection_feedback/icon.png",
        "status": "normal"
      },
      {
        "name": "policy_snap_to",
        "text": "SnapTo Policy",
        "description": "Canvas policy for snap shapes during drag&drop within a grid or the geometry of other shapes",
        "url": "policy_snap_to/index.html",
        "icon": "policy_snap_to/icon.png",
        "status": "normal"
      },
      {
        "name": "policy_figure_constraint",
        "text": "Drag&Drop edit policy",
        "description": "Install drag&drop edit policy. Constraint the region or direction for drag&drop operations.",
        "url": "policy_figure_constraint/index.html",
        "icon": "policy_figure_constraint/icon.png",
        "status": "normal"
      },
      {
        "name": "policy_drag_copy",
        "text": "Copy during Drag&Drop",
        "description": "Copy the dragged shape if the user press the [shift] key during the drag&drop operation instead on moving the figure.",
        "url": "policy_drag_copy/index.html",
        "icon": "policy_drag_copy/icon.png",
        "status": "normal"
      }
    ]
  },
  {
    "text": "Read/Write",
    "children": [
      {
        "name": "io_json_basic",
        "text": "Basic JSON",
        "description": "Load a JSON document into the canvas. Additional the current canvas will be dumped as JSON.",
        "url": "io_json_basic/index.html",
        "icon": "io_json_basic/icon.png",
        "status": "normal"
      },
      {
        "name": "io_json_extend",
        "text": "Extended JSON",
        "description": "Read/Write a JSON document with custom attributes into the canvas.",
        "url": "io_json_extend/index.html",
        "icon": "io_json_extend/icon.png",
        "status": "normal"
      },
      {
        "name": "io_json_connections",
        "text": "JSON with Connections",
        "description": "Load a JSON document into the canvas which respects connections too.",
        "url": "io_json_connections/index.html",
        "icon": "io_json_connections/icon.png",
        "status": "normal"
      },
      {
        "name": "io_json_dyn_labels",
        "text": "Figure with dynamic labels",
        "description": "Load a figure with dynamic count if labels. Additional one label is draggable",
        "url": "io_json_dyn_labels/index.html",
        "icon": "io_json_dyn_labels/icon.png",
        "status": "normal"
      },
      {
        "name": "io_svg_basic",
        "text": "SVG Export",
        "description": "Export the canvas into a SVG document. The document can be loaded with any SVG editor like Inkscape or Sodipodi",
        "url": "io_svg_basic/index.html",
        "icon": "io_svg_basic/icon.png",
        "status": "normal"
      },
      {
        "name": "io_json_multi_document",
        "text": "Reading multiple JSON files",
        "description": "Loading multiple JSON documents into one canvas without to clear the cnavas before",
        "url": "io_json_multi_document/index.html",
        "icon": "io_json_multi_document/icon.png",
        "status": "normal"
      },
      {
        "name": "io_png_overview",
        "text": "PNG Export",
        "description": "Export the canvas into a PNG image and show them as preview window.",
        "url": "io_png_overview/index.html",
        "icon": "io_png_overview/icon.png",
        "status": "normal"
      },
      {
        "name": "io_png_crop",
        "text": "Crop PNG Export",
        "description": "Export the canvas area that actually has objects in it to a PNG",
        "url": "io_png_crop/index.html",
        "icon": "io_png_crop/icon.png",
        "status": "normal"
      }
    ]
  },
  {
    "text": "Connection Examples",
    "children": [
      {
        "name": "connection_drop",
        "text": "Connection Drop",
        "description": "Show how to infix a node into a Connection with a Drag&Drop operation",
        "url": "connection_drop/index.html",
        "icon": "connection_drop/icon.png",
        "status": "normal"
      },
      {
        "name": "connection_vertex",
        "text": "Editable Vertex Locator",
        "description": "Add, delete or move the vertex points of a connection.",
        "url": "connection_vertex/index.html",
        "icon": "connection_vertex/icon.png",
        "status": "normal"
      },
      {
        "name": "connection_locator",
        "text": "Connection Locator",
        "description": "Usage of a 'Locator' for a label which is bounded to a connection.",
        "url": "connection_locator/index.html",
        "icon": "connection_locator/icon.png",
        "status": "normal"
      },
      {
        "name": "connection_decoration",
        "text": "Connection Decoration",
        "description": "Decorate the endpoints of a connections with different symbols like a Diamond, Circle, Arrow,...",
        "url": "connection_decoration/index.html",
        "icon": "connection_decoration/icon.png",
        "status": "normal"
      },
      {
        "name": "connection_with_contextmenu",
        "text": "Connection with context menu",
        "description": "A Connections which provides a simple context menu. Overrides the default connection type.",
        "url": "connection_with_contextmenu/index.html",
        "icon": "connection_with_contextmenu/icon.png",
        "status": "normal"
      },
      {
        "name": "connection_router",
        "text": "Connection Router",
        "description": "Different Connection router implementation for test purpose.",
        "url": "connection_router/index.html",
        "icon": "connection_router/icon.png",
        "status": "normal"
      },
      {
        "name": "connection_rubberband",
        "text": "Rubber band Router",
        "description": "Example implementation for a custom router - a rubber band router.",
        "url": "connection_rubberband/index.html",
        "icon": "connection_rubberband/icon.png",
        "status": "updated"
      },
      {
        "name": "connection_segment_handling",
        "text": "Connection segment add/remove",
        "description": "Use the conext menu to add or remove segments to the connection",
        "url": "connection_segment_handling/index.html",
        "icon": "connection_segment_handling/icon.png",
        "status": "normal"
      },
      {
        "name": "buildin_bridge",
        "text": "Bridge",
        "description": "Automatic bridging of crossing connectors",
        "url": "buildin_bridge/index.html",
        "icon": "buildin_bridge/icon.png",
        "status": "normal"
      },
      {
        "name": "connection_anchor_chopbox",
        "text": "Chopbox Anchor",
        "description": "Set the anchor of an connection to the bounding box of the shape instead bounded to a port",
        "url": "connection_anchor_chopbox/index.html",
        "icon": "connection_anchor_chopbox/icon.png",
        "status": "normal"
      },
      {
        "name": "connection_anchor_fan",
        "text": "Parallel Connections",
        "description": "Create parallel connections with the combination of an FanChonnectionAnchor and DirectRouter",
        "url": "connection_anchor_fan/index.html",
        "icon": "connection_anchor_fan/icon.png",
        "status": "normal"
      }
    ]
  }
]
