{
  "name": "locator",
  "namespace": "draw2d.layout",
  "description": "",
  "access": "",
  "virtual": false,
  "classes": [
    {
      "name": "BottomLocator",
      "namespace": "draw2d.layout.locator",
      "description": "<p>A bottomLocator is used to place figures at the bottom of a parent shape.</p>",
      "extends": [],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "relocate",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Relocates the given Figure.</p>",
          "parameters": [
            {
              "name": "index",
              "type": "Number",
              "description": "<p>child index of the target</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "target",
              "type": "draw2d.Figure",
              "description": "<p>The figure to relocate</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        }
      ],
      "fires": "",
      "constructor": {
        "name": "BottomLocator",
        "description": "",
        "parameters": [],
        "examples": [
          "// create a basic figure and add a Label/child via API call\n   //\n   let circle = new draw2d.shape.basic.Circle({\n       x:100,\n       y:50,\n       diameter:100,\n       stroke: 3,\n       color:\"#A63343\",\n       bgColor:\"#E65159\"\n   });\n\n   circle.add(new draw2d.shape.basic.Label({text:\"Bottom Label\"}), new draw2d.layout.locator.BottomLocator());\n   canvas.add( circle);"
        ]
      }
    },
    {
      "name": "CenterLocator",
      "namespace": "draw2d.layout.locator",
      "description": "<p>A CenterLocator is used to place figures in the center of a parent shape.</p>",
      "extends": [],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Constructs a locator with associated parent.</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "relocate",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Relocates the given Figure.</p>",
          "parameters": [
            {
              "name": "index",
              "type": "Number",
              "description": "<p>child index of the target</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "target",
              "type": "draw2d.Figure",
              "description": "<p>The figure to relocate</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        }
      ],
      "fires": "",
      "constructor": {
        "name": "CenterLocator",
        "description": "",
        "parameters": [],
        "examples": [
          "// create a basic figure and add a Label/child via API call\n   //\n   let circle = new draw2d.shape.basic.Circle({diameter:120});\n   circle.setStroke(3);\n   circle.setColor(\"#A63343\");\n   circle.setBackgroundColor(\"#E65159\");\n   circle.add(new draw2d.shape.basic.Label({text:\"Center Label\"}), new draw2d.layout.locator.CenterLocator());\n   canvas.add( circle, 100,50);"
        ]
      }
    },
    {
      "name": "ConnectionLocator",
      "namespace": "draw2d.layout.locator",
      "description": "<p>Repositions a Figure attached to a Connection when the\nConnection is moved. Provides for alignment at the start\n(source), middle, or end (target) of the Connection.</p>",
      "extends": [],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Default constructor for a Locator which can layout a figure in context of a\n{@link draw2d.Connector}</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        }
      ],
      "fires": "",
      "constructor": {
        "name": "ConnectionLocator",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "DraggableLocator",
      "namespace": "draw2d.layout.locator",
      "description": "<p>A DraggableLocator is used to place figures relative to the parent top left corner. It is\npossible to move a child node via drag&amp;drop.</p>",
      "extends": [],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Constructs a locator with associated parent.</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        }
      ],
      "fires": "",
      "constructor": {
        "name": "DraggableLocator",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "InputPortLocator",
      "namespace": "draw2d.layout.locator",
      "description": "<p>Repositions a Figure attached to a Connection when the\nConnection is moved. Provides for alignment at the start\n(source), middle, or end (target) of the Connection.</p>",
      "extends": [],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Default constructor for a Locator which can layout a port in context of a\n{@link draw2d.shape.node.Node}</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "relocate",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Controls the location of an {@link draw2d.Figure}</p>",
          "parameters": [
            {
              "name": "index",
              "type": "Number",
              "description": "<p>port index of the figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure to control</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        }
      ],
      "fires": "",
      "constructor": {
        "name": "InputPortLocator",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "LeftLocator",
      "namespace": "draw2d.layout.locator",
      "description": "<p>A LeftLocator is used to place figures to the left of a parent shape.</p>",
      "extends": [],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Constructs a locator with associated parent.</p>",
          "parameters": [
            {
              "name": "attr",
              "type": "Object",
              "description": "<p>additional init attributes</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "setter",
              "type": "Object",
              "description": "<p>key/value map of injected setter-methods</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "getter",
              "type": "Object",
              "description": "<p>key/value map of injected getter-methods</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "relocate",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Relocates the given Figure.</p>",
          "parameters": [
            {
              "name": "index",
              "type": "Number",
              "description": "<p>child index of the target</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "target",
              "type": "draw2d.Figure",
              "description": "<p>The figure to relocate</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        }
      ],
      "fires": "",
      "constructor": {
        "name": "LeftLocator",
        "description": "",
        "parameters": [],
        "examples": [
          "// create a basic figure and add a Label/child via API call\n   //\n   let start = new draw2d.shape.node.Start();\n   start.add(new draw2d.shape.basic.Label({text:\"Left Label\"}), new draw2d.layout.locator.LeftLocator({\n    margin:10  // distance to the parent shape\n   }));\n   canvas.add( start, 100,50);"
        ]
      }
    },
    {
      "name": "Locator",
      "namespace": "draw2d.layout.locator",
      "description": "<p>Controls the location of an IFigure.</p>",
      "extends": [],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Initial Constructor</p>",
          "parameters": [
            {
              "name": "attr",
              "type": "Object",
              "description": "<p>additional init attributes</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "setter",
              "type": "Object",
              "description": "<p>key/value map of injected setter-methods</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "getter",
              "type": "Object",
              "description": "<p>key/value map of injected getter-methods</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set locator attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>\n<p>// multiple attributes:\nlocator.attr({\nx: 30,\ny: 40\n});</p>\n<p>let data = locator.attr()</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "5.0.1",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": "<p>either the requested attribute if this method used as getter or <code>this</code> if the method uses as setter</p>"
          }
        },
        {
          "name": "bind",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Callback method if a child is bounded to a parent. This is\nthe perfect moment to prepare the child node with some basic\nbehaviour which are forced by the <code>Locator</code></p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "child",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": [],
          "returns": {
            "type": "this",
            "description": ""
          }
        },
        {
          "name": "unbind",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Callback method if a child is unbounded to the locator.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "child",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": [],
          "returns": {
            "type": "this",
            "description": ""
          }
        },
        {
          "name": "relocate",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Controls the location of an I{@link draw2d.Figure}</p>",
          "parameters": [
            {
              "name": "index",
              "type": "Number",
              "description": "<p>child index of the figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure to control</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "clone",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Return a clone of the locator object</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.layout.locator.Locator",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "Locator",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "ManhattanMidpointLocator",
      "namespace": "draw2d.layout.locator",
      "description": "<p>A ManhattanMidpointLocator that is used to place figures at the midpoint of a Manhatten routed\nconnection. The midpoint is always in the center of an edge.</p>",
      "extends": [
        "draw2d.layout.locator.ConnectionLocator"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Constructs a ManhattanMidpointLocator with associated Connection c.</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "relocate",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Relocates the given Figure always in the center of an edge.</p>",
          "parameters": [
            {
              "name": "index",
              "type": "Number",
              "description": "<p>child index of the target</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "target",
              "type": "draw2d.Figure",
              "description": "<p>The figure to relocate</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        }
      ],
      "fires": "",
      "constructor": {
        "name": "ManhattanMidpointLocator",
        "description": "",
        "parameters": [],
        "examples": [
          "// create and add two Node which contains Ports (In and OUT)\n   let start = new draw2d.shape.node.Start({x:50,y:50});\n   let end   = new draw2d.shape.node.End({x:230,y:100});\n\n   canvas.add( start);\n   canvas.add( end);\n\n   // Create a Connection and connect the Start and End node\n   //\n   let c = new draw2d.Connection();\n   c.setSource(start.getOutputPort(0));\n   c.setTarget(end.getInputPort(0));\n   canvas.add(c);\n\n   // create a label which should attach to the connection\n   //\n   let label = new draw2d.shape.basic.Label({text:\"I'm a Label\"});\n   label.setColor(\"#0d0d0d\");\n   label.setFontColor(\"#0d0d0d\");\n   label.setBackgroundColor(\"#f0f0f0\");\n\n   // add the decoration to the connection with a ManhattanMidpointLocator.\n   //\n   c.add(label, new draw2d.layout.locator.ManhattanMidpointLocator());"
        ]
      }
    },
    {
      "name": "OutputPortLocator",
      "namespace": "draw2d.layout.locator",
      "description": "<p>Repositions a Figure attached to a Connection when the\nConnection is moved. Provides for alignment at the start\n(source), middle, or end (target) of the Connection.</p>",
      "extends": [],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Default constructor for a Locator which can layout a port in context of a\n{@link draw2d.shape.node.Node}</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "relocate",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Controls the location of an I{@link draw2d.Figure}</p>",
          "parameters": [
            {
              "name": "index",
              "type": "Number",
              "description": "<p>child index of the figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure to control</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        }
      ],
      "fires": "",
      "constructor": {
        "name": "OutputPortLocator",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "ParallelMidpointLocator",
      "namespace": "draw2d.layout.locator",
      "description": "<p>A ParallelMidpointLocator that is used to place label at the midpoint of a  routed\nconnection. The midpoint is always in the center of an edge.\nThe label is aligned to the connection angle at the calculated conection segment.</p>",
      "extends": [],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Constructs a ParallelMidpointLocator with optional padding to the connection.</p>\n<p>if the parameter <b>distance</b> is less than zero the label is\nplaced above of the connection. Else the label is below the connection.</p>",
          "parameters": [
            {
              "name": "attr",
              "type": "Object",
              "description": "<p>object with {distance: <NUMBER>&gt;} distance of the label to the connection.</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "setDistance",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Set the distance to the connection</p>",
          "parameters": [
            {
              "name": "distance",
              "type": "Number",
              "description": "<p>the distance to the connection</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": [],
          "returns": {
            "type": "this",
            "description": ""
          }
        },
        {
          "name": "getDistance",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Returns the distance to the connection</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": [],
          "returns": {
            "type": "Number",
            "description": ""
          }
        },
        {
          "name": "relocate",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Relocates the given Figure always in the center of an edge.</p>",
          "parameters": [
            {
              "name": "index",
              "type": "Number",
              "description": "<p>child index of the target</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "target",
              "type": "draw2d.Figure",
              "description": "<p>The figure to relocate</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        }
      ],
      "fires": "",
      "constructor": {
        "name": "ParallelMidpointLocator",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "PolylineMidpointLocator",
      "namespace": "draw2d.layout.locator",
      "description": "<p>A PolylineMidpointLocator is used to place figures at the midpoint of a routed\nconnection. <br>\nIf the connection did have an odd count of points the figure is located in the center vertex of the polyline.<br>\nOn an even count of junction point, the figure will be center on the middle segment of the ploy line.</p>",
      "extends": [],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Constructs a ManhattanMidpointLocator with associated Connection c.</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "relocate",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Relocates the given Figure.</p>",
          "parameters": [
            {
              "name": "index",
              "type": "Number",
              "description": "<p>child index of the target</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "target",
              "type": "draw2d.Figure",
              "description": "<p>The figure to relocate</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        }
      ],
      "fires": "",
      "constructor": {
        "name": "PolylineMidpointLocator",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "PortLocator",
      "namespace": "draw2d.layout.locator",
      "description": "<p>The port locator calculates the position of an port. All ports MUST have a locator\nif you add them as child to a node.</p>",
      "extends": [],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Default constructor for a Locator which can layout a port in context of a</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        }
      ],
      "fires": "",
      "constructor": {
        "name": "PortLocator",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "RightLocator",
      "namespace": "draw2d.layout.locator",
      "description": "<p>A RightLocator is used to place figures to the right of a parent shape.</p>",
      "extends": [],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Constructs a locator with associated parent.</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "relocate",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Relocates the given Figure.</p>",
          "parameters": [
            {
              "name": "index",
              "type": "Number",
              "description": "<p>child index of the target</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "target",
              "type": "draw2d.Figure",
              "description": "<p>The figure to relocate</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        }
      ],
      "fires": "",
      "constructor": {
        "name": "RightLocator",
        "description": "",
        "parameters": [],
        "examples": [
          "// create a basic figure and add a Label/child via API call\n   //\n   var end = new draw2d.shape.node.End();\n   end.add(new draw2d.shape.basic.Label({text:\"Right Label\"}), new draw2d.layout.locator.RightLocator({\n        margin: 10 // distance to the parent shape\n   }));\n   canvas.add( end, 50,50);"
        ]
      }
    },
    {
      "name": "SmartDraggableLocator",
      "namespace": "draw2d.layout.locator",
      "description": "<p>A DraggableLocator is used to place figures relative to the parent nearest corner. It is\npossible to move a child node via drag&amp;drop.</p>",
      "extends": [],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Constructs a locator with associated parent.</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "relocate",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Controls the location of an I{@link draw2d.Figure}</p>",
          "parameters": [
            {
              "name": "index",
              "type": "Number",
              "description": "<p>child index of the figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure to control</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        }
      ],
      "fires": "",
      "constructor": {
        "name": "SmartDraggableLocator",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "TopLocator",
      "namespace": "draw2d.layout.locator",
      "description": "<p>A TopLocator  is used to place figures at the top/center of a parent shape.</p>",
      "extends": [],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Constructs a ManhattanMidpointLocator with associated Connection c.</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "relocate",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Relocates the given Figure.</p>",
          "parameters": [
            {
              "name": "index",
              "type": "Number",
              "description": "<p>child index of the target</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "target",
              "type": "draw2d.Figure",
              "description": "<p>The figure to relocate</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        }
      ],
      "fires": "",
      "constructor": {
        "name": "TopLocator",
        "description": "",
        "parameters": [],
        "examples": [
          "// create a basic figure and add a Label/child via API call\n   //\n   let circle = new draw2d.shape.basic.Circle({\n       x:100,\n       y:70,\n       diameter:80,\n       stroke: 3,\n       color:\"#A63343\",\n       bgColor:\"#E65159\"\n   });\n\n   circle.add(new draw2d.shape.basic.Label({text:\"Top Label\"}), new draw2d.layout.locator.TopLocator());\n   canvas.add( circle);"
        ]
      }
    },
    {
      "name": "XYAbsPortLocator",
      "namespace": "draw2d.layout.locator",
      "description": "<p>Create a locator for fixed x/y coordinate position. The port in the example below is\nalways 20px below of the top border.</p>",
      "extends": [],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>{@link draw2d.shape.node.Node}</p>",
          "parameters": [
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x coordinate of the port relative to the left of the parent</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y coordinate of the port relative to the top of the parent</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "setX",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Set the X Offset for the Locator</p>",
          "parameters": [
            {
              "name": "x",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "setY",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Set the y-offset of the locator</p>",
          "parameters": [
            {
              "name": "y",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "getX",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Get the X-Offset of the Locator</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": [],
          "returns": {
            "type": "Number",
            "description": ""
          }
        },
        {
          "name": "getY",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Returns the Y-Offset of the Locator</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": [],
          "returns": {
            "type": "Number",
            "description": ""
          }
        },
        {
          "name": "relocate",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Controls the location of an {@link draw2d.Figure}</p>",
          "parameters": [
            {
              "name": "index",
              "type": "Number",
              "description": "<p>child index of the figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure to control</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        }
      ],
      "fires": "",
      "constructor": {
        "name": "XYAbsPortLocator",
        "description": "",
        "parameters": [],
        "examples": [
          "var figure =  new draw2d.shape.basic.Rectangle({x:130,y:30,width:100,height:60});\n   figure.createPort(\"input\", new draw2d.layout.locator.XYAbsPortLocator(0,20));\n\n   canvas.add(figure);"
        ]
      }
    },
    {
      "name": "XYRelPortLocator",
      "namespace": "draw2d.layout.locator",
      "description": "<p>Create a locator for a relative x/y coordinate position. The coordinates are named in percentage [0..100%]\nrelative to the top/left corner of the parent node.<br>\n<br>\n<br>\nResize the shape in the example to see what happens. The port top position is always 20% of the shape height.</p>",
      "extends": [],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "xPercentage",
              "type": "Number",
              "description": "<p>the x coordinate in percent of the port relative to the left of the parent</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "yPercentage",
              "type": "Number",
              "description": "<p>the y coordinate in percent of the port relative to the top of the parent</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "setX",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Set the X Offset for the Locator</p>",
          "parameters": [
            {
              "name": "x",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "setY",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Set the y-offset of the locator</p>",
          "parameters": [
            {
              "name": "y",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "getX",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Get the X-Offset of the Locator</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": [],
          "returns": {
            "type": "Number",
            "description": ""
          }
        },
        {
          "name": "getY",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Returns the Y-Offset of the Locator</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": [],
          "returns": {
            "type": "Number",
            "description": ""
          }
        },
        {
          "name": "relocate",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Controls the location of an I{@link draw2d.Figure}</p>",
          "parameters": [
            {
              "name": "index",
              "type": "Number",
              "description": "<p>child index of the figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure to control</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        }
      ],
      "fires": "",
      "constructor": {
        "name": "XYRelPortLocator",
        "description": "",
        "parameters": [],
        "examples": [
          "let figure =  new draw2d.shape.basic.Rectangle({x:130,y:30,width:100,height:60});\n   figure.createPort(\"input\", new draw2d.layout.locator.XYRelPortLocator(0,20));\n\n   canvas.add(figure);"
        ]
      }
    }
  ],
  "namespaces": []
}