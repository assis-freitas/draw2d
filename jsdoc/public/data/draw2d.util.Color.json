{
  "name": "Color",
  "namespace": "draw2d.util",
  "description": "<p>Util class to handle colors in the draw2d enviroment.</p>",
  "extends": [],
  "access": "",
  "virtual": false,
  "functions": [
    {
      "name": "getHTMLStyle",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>Convert the color object into a HTML CSS representation</p>",
      "parameters": [],
      "inherited": false,
      "since": "",
      "examples": [],
      "returns": {
        "type": "String",
        "description": "<p>the color in rgb(##,##,##) representation</p>"
      }
    },
    {
      "name": "getRed",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>The red part of the color.</p>",
      "parameters": [],
      "inherited": false,
      "since": "",
      "examples": [],
      "returns": {
        "type": "Number",
        "description": "<p>the [red] part of the color.</p>"
      }
    },
    {
      "name": "getGreen",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>The green part of the color.</p>",
      "parameters": [],
      "inherited": false,
      "since": "",
      "examples": [],
      "returns": {
        "type": "Number",
        "description": "<p>the [green] part of the color.</p>"
      }
    },
    {
      "name": "getBlue",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>The blue part of the color</p>",
      "parameters": [],
      "inherited": false,
      "since": "",
      "examples": [],
      "returns": {
        "type": "Number",
        "description": "<p>the [blue] part of the color.</p>"
      }
    },
    {
      "name": "getAlpha",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>The alpha part of the color</p>",
      "parameters": [],
      "inherited": false,
      "since": "",
      "examples": [],
      "returns": {
        "type": "Number",
        "description": "<p>the [alpha] part of the color.</p>"
      }
    },
    {
      "name": "getIdealTextColor",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>Returns the ideal Text Color. Useful for font color selection by a given background color.</p>",
      "parameters": [],
      "inherited": false,
      "since": "",
      "examples": [],
      "returns": {
        "type": "draw2d.util.Color",
        "description": "<p>The <i>ideal</i> inverse color.</p>"
      }
    },
    {
      "name": "hex2rgb",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>return array of [r,g,b,a] from any valid color. if failed returns [0,0,0,1]</p>",
      "parameters": [
        {
          "name": "hexcolor",
          "type": "",
          "description": "",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "inherited": false,
      "since": "",
      "examples": [],
      "returns": {
        "type": "*",
        "description": ""
      }
    },
    {
      "name": "hex",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "",
      "parameters": [],
      "inherited": false,
      "since": "",
      "examples": []
    },
    {
      "name": "rgba",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>Convert the color object into a HTML CSS representation</p>",
      "parameters": [],
      "inherited": false,
      "since": "",
      "examples": [],
      "returns": {
        "type": "String",
        "description": "<p>the color in rgb(##,##,##) representation</p>"
      }
    },
    {
      "name": "hash",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>Convert the color object into a HTML CSS representation</p>",
      "parameters": [],
      "inherited": false,
      "since": "",
      "examples": [],
      "returns": {
        "type": "String",
        "description": "<p>the color in #RRGGBB representation</p>"
      }
    },
    {
      "name": "int2hex",
      "access": "private",
      "virtual": false,
      "deprecated": "",
      "description": "",
      "parameters": [],
      "inherited": false,
      "since": "",
      "examples": []
    },
    {
      "name": "darker",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>Returns a darker color of the given one. The original color is unchanged.</p>",
      "parameters": [
        {
          "name": "fraction",
          "type": "Number",
          "description": "<p>Darkness fraction between [0..1].</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "inherited": false,
      "since": "",
      "examples": []
    },
    {
      "name": "lighter",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>Make a color lighter. The original color is unchanged.</p>",
      "parameters": [
        {
          "name": "fraction",
          "type": "Number",
          "description": "<p>lighter fraction between [0..1].</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "inherited": false,
      "since": "",
      "examples": [],
      "returns": {
        "type": "draw2d.util.Color",
        "description": "<p>Lighter color.</p>"
      }
    },
    {
      "name": "fadeTo",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>Return a new color wich is faded to the given color.</p>",
      "parameters": [
        {
          "name": "color",
          "type": "draw2d.util.Color",
          "description": "",
          "default": "",
          "optional": "",
          "nullable": ""
        },
        {
          "name": "pc",
          "type": "Number",
          "description": "<p>the fade percentage in [0..1]</p>",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "inherited": false,
      "since": "2.1.0",
      "examples": [],
      "returns": {
        "type": "draw2d.util.Color",
        "description": ""
      }
    },
    {
      "name": "equals",
      "access": "",
      "virtual": false,
      "deprecated": "",
      "description": "<p>Compares two color objects</p>",
      "parameters": [
        {
          "name": "o",
          "type": "draw2d.util.Color",
          "description": "",
          "default": "",
          "optional": "",
          "nullable": ""
        }
      ],
      "inherited": false,
      "since": "",
      "examples": [],
      "returns": {
        "type": "Boolean",
        "description": ""
      }
    }
  ],
  "fires": "",
  "constructor": {
    "name": "Color",
    "description": "",
    "parameters": [
      {
        "name": "red",
        "type": [
          "Number",
          "String",
          "draw2d.util.Color",
          "Array"
        ],
        "description": "",
        "default": "",
        "optional": "",
        "nullable": ""
      },
      {
        "name": "green",
        "type": "Number",
        "description": "",
        "default": "",
        "optional": "",
        "nullable": ""
      },
      {
        "name": "blue",
        "type": "Number",
        "description": "",
        "default": "",
        "optional": "",
        "nullable": ""
      },
      {
        "name": "alpha",
        "type": "Number",
        "description": "",
        "default": "",
        "optional": true,
        "nullable": ""
      }
    ],
    "examples": [
      "// Create a new Color with RGB values\n    var color = new draw2d.util.Color(127,0,0);\n\n    // of from a hex string\n    var color2 = new draw2d.util.Color(\"#f00000\");\n\n    // Create a little bit darker color\n    var darkerColor = color.darker(0.2); // 20% darker\n\n    // create a optimal text color if 'color' the background color\n    // (best in meaning of contrast and readability)\n    var fontColor = color.getIdealTextColor();"
    ]
  }
}